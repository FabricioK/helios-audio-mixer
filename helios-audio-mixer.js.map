{"version":3,"sources":["src/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/src/bundle-standalone.js","src/bundle-standalone.js","src/src/debug.js","src/src/detect.js","src/src/mix.js","src/src/track.js","src/src/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","mix","window","heliosAudioMixer","./mix",2,"debug","level","log","lvl","str","arguments","console","setLogLvl","this","constrain","./utils",3,"detect","webAudio","AudioContext","webkitAudioContext","audioTypes","el","document","createElement",".m4a","canPlayType","replace",".mp3",".ogg","videoTypes",".webm",".mp4",".ogv","browser","bowser","firefox","navigator","userAgent","match","android","msie","ios","version","tween","TWEEN",4,"Track","Mix","opts","defaults","fileTypes","html5","gain","options","extend","tracks","lookup","muted","context","name","splice","warn","prototype","on","events","one","off","trigger","createTrack","track","_this","push","pause","source","createHTML5elementSource","removeTrack","_input","rest","arr","total","slice","apply","sourceMode","element","src","ready","loaded","getTrack","play","stop","mute","unmute","masterGain","updateTween","update","report","currentTime","./debug","./detect","./track",5,"playCreateNodes","nodes","addNode","lastnode","connect","destination","playElementSource","addEventListener","status","looping","loop","pan","startTime","cachedTime","startFrom","setEndTimer","timerDuration","buffer","duration","onendtimer","setTimeout","chrome","Math","floor","playBufferSource","finish","start","noteOn","createGain","decodeAudioData","audioData","decodedBuffer","createBufferSource","sourceBuffer","createGainNode","createBuffer","playSingleElement","timeFormat","seconds","m","gainCache","panX","panY","panZ","autoplay","playing","tweens","undefined","indexOf","Detect","loadBufferSource","useHTML5elementSource","querySelector","id","body","appendChild","canplay","crossOrigin","createMediaElementSource","load","forcePlay","request","XMLHttpRequest","open","responseType","onload","response","onerror","send","nodeType","processor","createScriptProcessor","analyser","createAnalyser","smoothingTimeConstant","fftSize","bufferLength","Uint8Array","frequencyBinCount","analyserData","onaudioprocess","getByteTimeDomainData","panner","createPanner","createConvolver","convolver","compressor","createDynamicsCompressor","delayNode","delay","createDelayNode","createDelay","delayTime","bufferSourceLoaded","at","clearTimeout","noteOff","angleDeg","angleRad","x","cos","y","sin","z","setPosition","tweenPan","tweenDuration","Promise","resolve","reject","Tween","currentAngle","to","easing","Easing","Sinusoidal","InOut","onUpdate","onComplete","setTo","val","value","volume","tweenGain","_val","_tweenDuration","currentGain","formattedTime","includeDuration",6,"output","args","key","hasOwnProperty","min","max","type","callback","Array"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,GAAAK,GAAAX,EAAA,QACAY,QAAAC,iBAAAF,ICEGG,QAAQ,IAAIC,GAAG,SAASf,EAAQU,EAAOJ,GCG1C,GAAAR,GAAAE,EAAA,WAEAgB,IACAN,GAAAJ,QAAAU,EAGAA,EAAAC,MAAA,EAGAD,EAAAE,IAAA,SAAAC,GACA,GAAAA,GAAAH,EAAAC,MAAA,CAEA,IAAA,GADAG,GAAA,WACAnB,EAAA,EAAAA,EAAAoB,UAAAb,OAAAP,IACAmB,GAAAC,UAAApB,GAAA,GACAqB,SAAAJ,IAAAE,KAIAJ,EAAAO,UAAA,SAAAJ,GACAK,KAAAR,MAAAlB,EAAA2B,UAAAN,EAAA,EAAA,GACAH,EAAAE,IAAA,EAAA,iBAAAC,MDMGO,UAAU,IAAIC,GAAG,SAAS3B,EAAQU,EAAOJ,GEhC5C,GAAAsB,KAGAA,GAAAC,YAAAjB,OAAAkB,eAAAlB,OAAAmB,oBAGAH,EAAAI,WAAA,WACA,GAAAC,GAAAC,SAAAC,cAAA,QAEA,QACAC,UAAAH,EAAAI,cAAAJ,EAAAI,YAAA,iCAAAC,QAAA,KAAA,KACAC,UAAAN,EAAAI,cAAAJ,EAAAI,YAAA,eAAAC,QAAA,KAAA,KACAE,UAAAP,EAAAI,cAAAJ,EAAAI,YAAA,8BAAAC,QAAA,KAAA,SAIAV,EAAAa,WAAA,WAEA,GAAAR,GAAAC,SAAAC,cAAA,QAEA,QACAO,WAAAT,EAAAI,cAAAJ,EAAAI,YAAA,oCAAAC,QAAA,KAAA,KACAK,UAAAV,EAAAI,cAAAJ,EAAAI,YAAA,8CAAAC,QAAA,KAAA,KACAM,UAAAX,EAAAI,cAAAJ,EAAAI,YAAA,8BAAAC,QAAA,KAAA,SAKAV,EAAAiB,QAAA,WAEA,MAAA,mBAAAC,QAAAA,QAGAC,UAAAC,UAAAC,UAAAC,MAAA,YACAC,UAAAH,UAAAC,UAAAC,MAAA,YACAE,OAAAJ,UAAAC,UAAAC,MAAA,SACAG,MAAAL,UAAAC,UAAAC,MAAA,uBAEAI,SAAA,MAKA1B,EAAA2B,MAAA,WACA,MAAA,mBAAAC,QAAA,GAAA,KAGA9C,EAAAJ,QAAAsB,OFkCM6B,GAAG,SAASzD,EAAQU,EAAOJ,GGvEjC,GAAAR,GAAAE,EAAA,WACA0D,EAAA1D,EAAA,WACA4B,EAAA5B,EAAA,YACAgB,EAAAhB,EAAA,WAGA2D,EAAA,SAAAC,GAEApC,KAAAkC,MAAAA,EAEAlC,KAAAD,UAAAP,EAAAO,SAEA,IAAAsC,IACAC,WAAA,OAAA,OAAA,QACAC,OAAA,EACAC,KAAA,EAEAxC,MAAAyC,QAAAnE,EAAAoE,OAAAL,EAAAD,OAEApC,KAAA2C,UACA3C,KAAA4C,UAEA5C,KAAA6C,OAAA,EAEA7C,KAAA8C,QAAA,KAEA9C,KAAAI,OAAAA,GAOA,YAAAA,EAAAiB,QAAA0B,MAAA3C,EAAA0B,SAAA1B,EAAA0B,QAAA,IACA1B,EAAAiB,QAAAQ,OAAA,GAAA,IAAAzB,EAAAiB,QAAAS,SACA9B,KAAAyC,QAAAF,SAEAnC,EAAAC,UAAA,EAOA,KAAA,GAAA5B,GAAAuB,KAAAyC,QAAAH,UAAAtD,OAAA,EAAAP,GAAA,EAAAA,IACA2B,EAAAI,WAAAR,KAAAyC,QAAAH,UAAA7D,KACAuB,KAAAyC,QAAAH,UAAAU,OAAAvE,EAAA,EAGA,OAAAuB,MAAAyC,QAAAH,UAAAtD,QAAA,MACAc,SAAAmD,KAAA,kFAQA7C,EAAAC,YAAA,IACAL,KAAA8C,QAAA,kBAAAxC,cAAA,GAAAlB,QAAAkB,aAAA,GAAAlB,QAAAmB,oBAGAf,EAAAE,IAAA,EAAA,eAAAU,EAAAC,SAAA,kBAAA,cAAA,YAAAL,KAAAyC,QAAAH,WAEAtC,MASAmC,GAAAe,UAAAC,GAAA7E,EAAA8E,OAAAD,GACAhB,EAAAe,UAAAG,IAAA/E,EAAA8E,OAAAC,IACAlB,EAAAe,UAAAI,IAAAhF,EAAA8E,OAAAE,IACAnB,EAAAe,UAAAK,QAAAjF,EAAA8E,OAAAG,QASApB,EAAAe,UAAAM,YAAA,SAAAT,EAAAX,GAEA,GACAqB,GADAC,EAAA1D,IAMA,IAHA+C,GACAvD,EAAAE,IAAA,EAAA,mCAEAU,EAAAC,YAAA,EAAA,CAEA,GAAAL,KAAA4C,OAAAG,GAEA,WADAvD,GAAAE,IAAA,EAAA,kBAAAgE,EAAAX,KAAA,mBAKAU,GAAA,GAAAvB,GAAAa,EAAAX,EAAAsB,GAEA1D,KAAA2C,OAAAgB,KAAAF,GACAzD,KAAA4C,OAAAG,GAAAU,MAIAA,GAAAzD,KAAA4C,OAAAG,GAEAU,GASAA,EAAAG,QAEAH,EAAAhB,QAAAnE,EAAAoE,OAAAe,EAAAA,EAAApB,SAAAD,OAEAqB,EAAAhB,QAAAoB,SACAJ,EAAAhB,QAAAoB,QAAAH,EAAAvE,IAAAsD,QAAAH,UAAA,GACAmB,EAAAK,8BAbAL,EAAA,GAAAvB,GAAAa,EAAAX,EAAAsB,GAEA1D,KAAA2C,OAAAgB,KAAAF,GACAzD,KAAA4C,OAAAG,GAAAU,EAeA,OAAAA,IAKAtB,EAAAe,UAAAa,YAAA,SAAAC,GAEA,GAEAP,GAAAV,EAFAW,EAAA1D,IAIA,iBAAAgE,GACAjB,EAAAiB,EACA,gBAAAA,IAAAA,EAAAjB,OACAA,EAAAiB,EAAAjB,KAEA,IAAAU,GAAAC,EAAAd,OAAAG,EAEA,KAAAU,EAEA,WADAjE,GAAAE,IAAA,EAAA,iBAAAqD,EAAA,sBAIA,IAAA3C,EAAAC,YAAA,EAAA,CAEAoD,EAAAG,OAMA,KAAA,GAJAK,GACAC,EAAAR,EAAAf,OACAwB,EAAAD,EAAAlF,OAEAP,EAAA,EAAA0F,EAAA1F,EAAAA,IACAyF,EAAAzF,IAAAyF,EAAAzF,GAAAsE,OAAAA,IACAkB,EAAAC,EAAAE,MAAA3F,EAAA,GAAA0F,GACAD,EAAAlF,OAAA,EAAAP,EAAA0F,EAAA1F,EAAA,EACAyF,EAAAP,KAAAU,MAAAH,EAAAD,GAIAR,GAAAF,QAAA,SAAAG,GACAD,EAAAL,UAGA,YAAAK,EAAAhB,QAAA6B,YAAAb,EAAAc,UACAd,EAAAc,QAAAC,IAAA,IAEAf,EAAA,WACAC,GAAAd,OAAAG,GACAvD,EAAAE,IAAA,EAAA,kBAAAqD,EAAA,SAIAU,GAAAG,QAEAH,EAAAc,QAAAC,IAAA,GACAf,EAAAI,OAAA,GAEAJ,EAAAgB,OAAA,EACAhB,EAAAiB,QAAA,GAOAvC,EAAAe,UAAAyB,SAAA,SAAA5B,GACA,MAAA/C,MAAA4C,OAAAG,KAAA,GAaAZ,EAAAe,UAAAU,MAAA,WAEApE,EAAAE,IAAA,EAAA,WAAAM,KAAA2C,OAAA3D,OAAA,eAEA,KAAA,GAAAP,GAAA,EAAAA,EAAAuB,KAAA2C,OAAA3D,OAAAP,IACAuB,KAAA2C,OAAAlE,GAAAmF,SAGAzB,EAAAe,UAAA0B,KAAA,WAEApF,EAAAE,IAAA,EAAA,WAAAM,KAAA2C,OAAA3D,OAAA,cAEA,KAAA,GAAAP,GAAA,EAAAA,EAAAuB,KAAA2C,OAAA3D,OAAAP,IACAuB,KAAA2C,OAAAlE,GAAAmG,QAGAzC,EAAAe,UAAA2B,KAAA,WAEArF,EAAAE,IAAA,EAAA,YAAAM,KAAA2C,OAAA3D,OAAA,cAEA,KAAA,GAAAP,GAAA,EAAAA,EAAAuB,KAAA2C,OAAA3D,OAAAP,IACAuB,KAAA2C,OAAAlE,GAAAoG,QAMA1C,EAAAe,UAAA4B,KAAA,WACA,IAAA9E,KAAA6C,MAAA,CACA7C,KAAA6C,OAAA,EACArD,EAAAE,IAAA,EAAA,UAAAM,KAAA2C,OAAA3D,OAAA,UACA,KAAA,GAAAP,GAAA,EAAAA,EAAAuB,KAAA2C,OAAA3D,OAAAP,IACAuB,KAAA2C,OAAAlE,GAAAqG,SAIA3C,EAAAe,UAAA6B,OAAA,WACA,GAAA/E,KAAA6C,MAAA,CACA7C,KAAA6C,OAAA,EACArD,EAAAE,IAAA,EAAA,YAAAM,KAAA2C,OAAA3D,OAAA,UACA,KAAA,GAAAP,GAAA,EAAAA,EAAAuB,KAAA2C,OAAA3D,OAAAP,IACAuB,KAAA2C,OAAAlE,GAAAsG,WAKA5C,EAAAe,UAAAV,KAAA,SAAAwC,GACA,GAAA,mBAAAA,GAAA,CACAhF,KAAAyC,QAAAD,KAAAwC,CAKA,KAAA,GAAAvG,GAAA,EAAAA,EAAAuB,KAAA2C,OAAA3D,OAAAP,IACAuB,KAAA2C,OAAAlE,GAAA+D,KAAAxC,KAAA2C,OAAAlE,GAAA+D,QAGA,MAAAxC,MAAAyC,QAAAD,MAcAL,EAAAe,UAAA+B,YAAA,WACAjD,MAAAkD,UAMA/C,EAAAe,UAAAiC,OAAA,WAEA,IAAA,GADAA,GAAA,GACA1G,EAAA,EAAAA,EAAAuB,KAAA2C,OAAA3D,OAAAP,IACA0G,GAAAnF,KAAA2C,OAAAlE,GAAA+D,OAAA,IAAAxC,KAAA2C,OAAAlE,GAAA2G,cAAA,IAAApF,KAAA2C,OAAAlE,GAAAsE,KAAA,IAEAjD,SAAAJ,IAAAyF,IAOAjG,EAAAJ,QAAAqD,IHmFGkD,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAErF,UAAU,IAAIsF,GAAG,SAAShH,EAAQU,EAAOJ,GIkEjF,QAAA2G,GAAA/B,GAaA,GAXAlE,EAAAE,IAAA,EAAA,6BAAAgE,EAAAX,KAAA,KAKAW,EAAAgC,SAGAhC,EAAAiC,QAAA,UAAAA,QAAA,QAGAjC,EAAAjB,QAAAiD,MAAA1G,OACA,IAAA,GAAAP,GAAA,EAAAA,EAAAiF,EAAAjB,QAAAiD,MAAA1G,OAAAP,IACAiF,EAAAiC,QAAAjC,EAAAjB,QAAAiD,MAAAjH,GAKAiF,GAAAgC,MAAAE,SAAAC,QAAAnC,EAAAvE,IAAA2D,QAAAgD,aAMA,QAAAC,GAAArC,GAGAA,EAAAgC,QAEAD,EAAA/B,GAGAA,EAAAa,QAAAyB,iBAAA,QAAA,WACAtC,EAAAH,QAAA,QAAAG,KACA,IAOAA,EAAAuC,OAAAxB,OAAA,EACAf,EAAAH,QAAA,QAAAG,GAEAA,EAAAjB,QAAAyD,QAAAxC,EAAAa,QAAA4B,MAAA,EACAzC,EAAAa,QAAA4B,MAAA,EAEAzC,EAAAlB,KAAAkB,EAAAjB,QAAAD,MACAkB,EAAA0C,IAAA1C,EAAAjB,QAAA2D,KAIA1C,EAAAjB,QAAA4D,UAAA3C,EAAAa,QAAAa,YAAA1B,EAAAjB,QAAA6D,UACA,IAAAC,GAAA7C,EAAAjB,QAAA6D,YAAA,CAEA9G,GAAAE,IAAA,EAAA,kBAAAgE,EAAAX,KAAA,UAAAwD,EAAA,KAAA7C,EAAAjB,QAAA4D,UAAA,UAAA3C,EAAAlB,QAIAkB,EAAAa,QAAAa,YAAAmB,EACA7C,EAAAa,QAAAK,OAEAlB,EAAAH,QAAA,OAAAG,GAOA,QAAA8C,KACA,GAAA9C,GAAA1D,KACAuG,EAAA7C,EAAAjB,QAAA6D,YAAA,EACAG,EAAA/C,EAAAG,OAAA6C,OAAAC,SAAAJ,CAEA7C,GAAAkD,WAAAC,WAAA,WACAnD,EAAAH,QAAA,QAAAG,GAEAA,EAAAjB,QAAAyD,UAEA5E,QAAAA,OAAAwF,QAAAC,KAAAC,MAAA1F,OAAAQ,UAAA,IAEA4B,EAAAmB,OACAnB,EAAAkB,QAEA4B,EAAAzH,KAAA2E,KAKA,IAAA+C,GAGA,QAAAQ,GAAAvD,GAEAA,EAAAuC,OAAAxB,OAAA,EAOAf,EAAAG,OAAA,IAGA,IAAAqD,GAAA,WAEAzB,EAAA/B,GAEAA,EAAAuC,OAAAxB,OAAA,EACAf,EAAAH,QAAA,QAAAG,GAGAA,EAAAG,OAAAsC,KAAAzC,EAAAjB,QAAA,SAAA,GAAA,EACAiB,EAAAlB,KAAAkB,EAAAjB,QAAAD,MACAkB,EAAA0C,IAAA1C,EAAAjB,QAAA2D,KAMA1C,EAAAjB,QAAA4D,UAAA3C,EAAAG,OAAAf,QAAAsC,YAAA1B,EAAAjB,QAAA6D,UACA,IAAAC,GAAA7C,EAAAjB,QAAA6D,YAAA,CAEA9G,GAAAE,IAAA,EAAA,kBAAAgE,EAAAX,KAAA,UAAAwD,EAAA,KAAA7C,EAAAjB,QAAA4D,UAAA,UAAA3C,EAAAlB,QAGA,kBAAAkB,GAAAG,OAAAsD,MAAAzD,EAAAG,OAAAsD,MAAA,EAAAZ,GACA7C,EAAAG,OAAAuD,OAAAb,GAGA7C,EAAAkD,YAAA,EACAJ,EAAAzH,KAAA2E,GAGAA,EAAAH,QAAA,OAAAG,GASA,IAAA,kBAAAA,GAAAvE,IAAA2D,QAAAuE,WAEA3D,EAAAvE,IAAA2D,QAAAwE,gBAAA5D,EAAAjB,QAAA8E,UAAA,SAAAC,GACA,IAAA9D,EAAAuC,OAAAxB,MAAA,CAEAf,EAAAG,OAAAH,EAAAvE,IAAA2D,QAAA2E,oBACA,IAAAC,GAAAF,CACA9D,GAAAG,OAAA6C,OAAAgB,EAEAR,WAKA,IAAA,kBAAAxD,GAAAvE,IAAA2D,QAAA6E,eAAA,CAEAjE,EAAAG,OAAAH,EAAAvE,IAAA2D,QAAA2E,oBACA,IAAAC,GAAAhE,EAAAvE,IAAA2D,QAAA8E,aAAAlE,EAAAjB,QAAA8E,WAAA,EACA7D,GAAAG,OAAA6C,OAAAgB,EAEAR,KAMA,QAAAW,GAAAnE,GAEAlE,EAAAE,IAAA,EAAA,kBAAAgE,EAAAX,KAAA,OAEAW,EAAAlB,KAAAkB,EAAAjB,QAAAD,MAEAkB,EAAAuC,OAAAxB,OAAA,EACAf,EAAAa,QAAAK,OACAlB,EAAAH,QAAA,OAAAG,GA2SA,QAAAoE,GAAAC,GACA,GAAAC,GAAAjB,KAAAC,MAAAe,EAAA,IAAA,GAAA,IAAAhB,KAAAC,MAAAe,EAAA,IAAAhB,KAAAC,MAAAe,EAAA,IACA3J,EAAA2I,KAAAC,MAAAe,EAAA,GAAAC,GAAA,GAAA,IAAAjB,KAAAC,MAAAe,EAAA,GAAAC,GAAAjB,KAAAC,MAAAe,EAAA,GAAAC,EACA,OAAAA,GAAA,IAAA5J,EAj6BA,GAAAE,GAAAE,EAAA,WAEAgB,GADAhB,EAAA,YACAA,EAAA,YAEA0D,EAAA,SAAAa,EAAAX,EAAAjD,GAqEA,GAnEAa,KAAAqC,UAEAiC,WAAA,SAEAT,QAAA,EAEA6B,SAEAlD,KAAA,EACAyF,WAAA,EAEA7B,IAAA,EAEA8B,KAAA,EACAC,KAAA,EACAC,KAAA,EAEAjB,MAAA,EACAb,WAAA,EACAD,UAAA,EAEAH,SAAA,EACAmC,UAAA,EACAxF,MAAA1D,EAAA,OAAA,GAAA,GAIAa,KAAAyC,QAAAnE,EAAAoE,OAAA1C,KAAAqC,SAAAD,OAEApC,KAAAyC,QAAAwF,aAAA,IACAjI,KAAAyC,QAAAwF,UAAAjI,KAAAyC,QAAAD,MAEAxC,KAAA+C,KAAAA,EAGA/C,KAAAiG,QACAvB,QAAA,EACAD,OAAA,EACA6D,SAAA,GAGAtI,KAAAb,IAAAA,EAEAa,KAAAoD,UACApD,KAAAuI,UACAvI,KAAA0F,MAAA8C,OAEAxI,KAAA4G,WAAA4B,OAEAxI,KAAAuE,QAAAiE,OACAxI,KAAA6D,OAAA2E,OAEA,gBAAAxI,MAAAyC,QAAAoB,QAAA,IAAA7D,KAAAyC,QAAAoB,OAAA4E,QAAA,SAEAzI,KAAAyC,QAAAoB,QAAA7D,KAAAb,IAAAsD,QAAAH,UAAA,GACA,gBAAAtC,MAAAyC,QAAAoB,SAEA7D,KAAAyC,QAAA6B,WAAA,WAGA9E,EAAAE,IAAA,EAAA,gBAAAM,KAAA+C,KAAA,aAAA/C,KAAAyC,QAAA6B,WAAA,gBAAAtE,KAAAyC,QAAA4F,UAOAK,OAAArI,YAAA,EAAA,CAIA,IAAAL,KAAAyC,QAAAoB,OAEA,WADArE,GAAAE,IAAA,EAAA,mBAAAqD,EAAA,qBAIA,YAAA/C,KAAAyC,QAAA6B,WAEAtE,KAAA2I,mBAEA,YAAA3I,KAAAyC,QAAA6B,aAEA,gBAAAtE,MAAAyC,QAAAoB,OACA7D,KAAA4I,wBAEA5I,KAAA8D,gCAIA,CASA,GALAtE,EAAAE,IAAA,EAAA,oCAAAqD,GAGA/C,KAAAuE,QAAA7D,SAAAmI,cAAA,SAAA9F,IAEA/C,KAAAuE,QAAA,CACA,GAAA9D,GAAAC,SAAAC,cAAA,QACAF,GAAAqI,GAAA/F,EACArC,SAAAqI,KAAAC,YAAAvI,GACAT,KAAAuE,QAAA7D,SAAAmI,cAAA,SAAA9F,GAGA,GAAAkG,GAAA,WACAjJ,KAAAiG,OAAAvB,SAEA1E,KAAAiG,OAAAvB,QAAA,EACA1E,KAAAiG,OAAAxB,OAAA,EAEAzE,KAAAyC,QAAA4F,UACArI,KAAA4D,QAEA5D,KAAAuD,QAAA,OAAAvD,QAGA0D,EAAA1D,IAGA0D,GAAAa,QAAAyB,iBAAA,iBAAAiD,GAAA,GACAvF,EAAAa,QAAAyB,iBAAA,OAAAiD,GAAA,GAGAvF,EAAAa,QAAAyB,iBAAA,QAAA,WAEAtC,EAAAjB,QAAAyD,SAEA1G,EAAAE,IAAA,EAAA,SAAAgE,EAAAX,KAAA,YAEAW,EAAAa,QAAAa,YAAA,EACA1B,EAAAa,QAAAK,SAIAlB,EAAAH,QAAA,QAAAG,GACAA,EAAAvE,IAAA4E,YAAAL,EAAAX,SAGA,GAEA/C,KAAA8D,yBAAA9D,KAAAyC,QAAAoB,SAUA3B,GAAAgB,UAAAC,GAAA7E,EAAA8E,OAAAD,GACAjB,EAAAgB,UAAAG,IAAA/E,EAAA8E,OAAAC,IACAnB,EAAAgB,UAAAI,IAAAhF,EAAA8E,OAAAE,IACApB,EAAAgB,UAAAK,QAAAjF,EAAA8E,OAAAG,QAcArB,EAAAgB,UAAAY,yBAAA,WAEA,GAAAJ,GAAA1D,IACA,IAAA0D,EAAAjB,QAAAoB,OAAA,CAEArE,EAAAE,IAAA,EAAA,UAAAM,KAAA+C,KAAA,qCAAAW,EAAAjB,QAAAoB,OAAAH,EAAAvE,IAAAsD,QAAAH,UAAA,GAAA,KACAoB,EAAAuC,OAAAxB,OAAA,CAEA,IAAAD,GAAAd,EAAAjB,QAAAoB,MAEAH,GAAAjB,QAAAoB,OAAAnD,SAAAC,cAAA,SACA+C,EAAAjB,QAAAoB,OAAAqF,YAAA,GACAxF,EAAAjB,QAAAoB,OAAAW,IAAAA,EAEAd,EAAAkF,0BAIA1G,EAAAgB,UAAA0F,sBAAA,WAEA,GAAAlF,GAAA1D,IACA,IAAA0D,EAAAjB,QAAAoB,OAAA,CAEArE,EAAAE,IAAA,EAAA,UAAAM,KAAA+C,KAAA,gCAAAW,EAAAjB,QAAAoB,OAAA,KAEAH,EAAAa,QAAAb,EAAAjB,QAAAoB,OACAH,EAAAjB,QAAAoB,OAAAqF,YAAA,GACAxF,EAAAjB,QAAAoB,OAAAH,EAAAa,QAAAC,IAKAd,EAAAjB,QAAAyD,UAAAxC,EAAAa,QAAA4B,MAAA,GACAzC,EAAAjB,QAAAI,QAAAa,EAAAa,QAAA1B,OAAA,GAEAa,EAAAvE,IAAA2D,UACAY,EAAAG,OAAAH,EAAAvE,IAAA2D,QAAAqG,yBAAAzF,EAAAa,SAEA,IAAAE,GAAA,WACAf,EAAAuC,OAAAvB,QAAA,EACAhB,EAAAjB,QAAA4F,UAAA3E,EAAAkB,OACAlB,EAAAH,QAAA,OAAAG,GAQA,OALAA,GAAAa,QAAAyB,iBAAA,iBAAAvB,GACAf,EAAAa,QAAAyB,iBAAA,QAAA,WAAAtC,EAAAH,QAAA,eAEAG,EAAAa,QAAA6E,OAEA1F,IAGAxB,EAAAgB,UAAAyF,iBAAA,SAAAU,GAEA,GAAA3F,GAAA1D,IACA,IAAA0D,EAAAjB,QAAAoB,OAAA,CAEArE,EAAAE,IAAA,EAAA,UAAAM,KAAA+C,KAAA,uBAAAW,EAAAjB,QAAAoB,OAAA,IAEA,IAAAyF,GAAA,GAAAC,eACAD,GAAAE,KAAA,MAAA9F,EAAAjB,QAAAoB,QAAA,GACAyF,EAAAG,aAAA,cAGAH,EAAAI,OAAA,WACAlK,EAAAE,IAAA,EAAA,IAAAgE,EAAAX,KAAA,aAAAW,EAAAjB,QAAAoB,OAAA,KACAH,EAAAjB,QAAA8E,UAAA+B,EAAAK,SACAjG,EAAAuC,OAAAvB,QAAA,EACAhB,EAAAH,QAAA,OAAAG,GACA2F,EACA3F,EAAAkB,MAAA,GAEAlB,EAAAjB,QAAA4F,UAAA3E,EAAAkB,QAIA0E,EAAAM,QAAA,WACApK,EAAAE,IAAA,EAAA,wBAAAgE,EAAAX,KAAA,kBAAAW,EAAAjB,QAAAoB,OAAA,KACAH,EAAAH,QAAA,YAAAG,IAGA4F,EAAAO,SAqBA3H,EAAAgB,UAAAyC,QAAA,SAAAmE,GAEA,GAAApG,GAAA1D,IASA,IANA0D,EAAAgC,MAAAE,WAAAlC,EAAAgC,MAAAE,SAAAlC,EAAAG,QAEArE,EAAAE,IAAA,EAAA,eAAAoK,GAIA,YAAAA,EAAA,CAGApG,EAAAgC,MAAAqE,UAAArG,EAAAvE,IAAA2D,QAAAkH,sBAAA,KAAA,EAAA,GAGAtG,EAAAgC,MAAAuE,SAAAvG,EAAAvE,IAAA2D,QAAAoH,iBACAxG,EAAAgC,MAAAuE,SAAAE,sBAAA,GACAzG,EAAAgC,MAAAuE,SAAAG,QAAA,GAEA1G,EAAAgC,MAAAqE,UAAAlE,QAAAnC,EAAAvE,IAAA2D,QAAAgD,aACApC,EAAAgC,MAAAuE,SAAApE,QAAAnC,EAAAgC,MAAAqE,WAGArG,EAAAjB,QAAA4H,aAAA,GAAAC,YAAA5G,EAAAgC,MAAAuE,SAAAM,kBACA,IAAAC,GAAA,GAAAF,YAAA5G,EAAAjB,QAAA4H,aAEA3G,GAAAgC,MAAAE,SAAAC,QAAAnC,EAAAgC,MAAAuE,UAEAvG,EAAAgC,MAAAqE,UAAAU,eAAA,WACA/G,EAAAgC,MAAAuE,SAAAS,sBAAAF,GACA9G,EAAAH,QAAA,UAAAiH,QAOA,IAAA,SAAAV,EAEApG,EAAAvE,IAAA2D,QAAA6E,eACAjE,EAAAgC,MAAAlD,KAAAkB,EAAAvE,IAAA2D,QAAA6E,iBAEAjE,EAAAgC,MAAAlD,KAAAkB,EAAAvE,IAAA2D,QAAAuE,aAGA3D,EAAAgC,MAAAE,SAAAC,QAAAnC,EAAAgC,MAAAlD,MAGAkB,EAAAgC,MAAAE,SAAAlC,EAAAgC,MAAAlD,SAOA,IAAA,WAAAsH,EAAA,CAEA,GAAA1K,OAAAkB,aAEAoD,EAAAgC,MAAAiF,OAAAjH,EAAAvE,IAAA2D,QAAA8H,mBAIA,CAAA,IAAAxL,OAAAmB,mBAOA,MAAAmD,EALAA,GAAAgC,MAAAiF,OAAAjH,EAAAvE,IAAA2D,QAAA8H,eAQAlH,EAAAgC,MAAAE,SAAAC,QAAAnC,EAAAgC,MAAAiF,QACAjH,EAAAgC,MAAAE,SAAAlC,EAAAgC,MAAAiF,WAOA,IAAA,cAAAb,EAAA,CAEA,IAAApG,EAAAvE,IAAA2D,QAAA+H,gBAAA,MAAAnH,EAEAA,GAAAgC,MAAAoF,UAAApH,EAAAvE,IAAA2D,QAAA+H,sBAaA,eAAAf,GAEApG,EAAAgC,MAAAqF,WAAArH,EAAAvE,IAAA2D,QAAAkI,2BAIAtH,EAAAgC,MAAAE,SAAAC,QAAAnC,EAAAgC,MAAAqF,YACArH,EAAAgC,MAAAE,SAAAlC,EAAAgC,MAAAqF,YAOA,UAAAjB,IAEApB,OAAAhD,MAAAuF,UACAvH,EAAAgC,MAAAwF,MAAAxH,EAAAvE,IAAA2D,QAAAqI,kBAEAzH,EAAAgC,MAAAwF,MAAAxH,EAAAvE,IAAA2D,QAAAsI,cAEA1H,EAAAgC,MAAAwF,MAAAG,UAAA,EAEA3H,EAAAgC,MAAAE,SAAAC,QAAAnC,EAAAgC,MAAAwF,OACAxH,EAAAgC,MAAAE,SAAAlC,EAAAgC,MAAAwF,MAKA,OAAAxH,IAUAxB,EAAAgB,UAAA0B,KAAA,SAAA0G,GAEA,GAAA5H,GAAA1D,IAEA,KAAA0D,EAAAuC,OAAAvB,OAEA,WADAlF,GAAAE,IAAA,EAAA,qBAAAgE,EAAAX,KAAA,gBAIA,IAAAW,EAAAuC,OAAAqC,WAAA,EAoBA,MAnBA5E,GAAAuC,OAAAqC,SAAA,EAEAI,OAAArI,SAGAqI,OAAArI,UAAA,WAAAqD,EAAAjB,QAAA6B,WAEAgH,EACArE,EAAAvD,IAEAA,EAAAuC,OAAAqC,SAAA,EACA5E,EAAAiF,kBAAA,IAIAD,OAAArI,UAAA,YAAAqD,EAAAjB,QAAA6B,YACAyB,EAAArC,GAbAmE,EAAAnE,GAgBAA,GAkMAxB,EAAAgB,UAAAU,MAAA,SAAA2H,GAEA,GAAAvL,KAAAiG,OAAAxB,OAAAzE,KAAAiG,OAAAqC,QAAA,CAEA,GAAA5E,GAAA1D,IAiCA,OA9BA,gBAAAuL,GAAA7H,EAAAjB,QAAA6D,WAAAiF,EACA7H,EAAAjB,QAAA6D,WAAA5C,EAAA0B,cAEA1B,EAAAuC,OAAAqC,SAAA,EAEA5E,EAAAkD,YAAA4E,aAAA9H,EAAAkD,YAEA8B,OAAArI,YAAA,EAEA,WAAAqD,EAAAjB,QAAA6B,WAGA,kBAAAZ,GAAAG,OAAAgB,KACAnB,EAAAG,OAAAgB,KAAA,GACA,kBAAAnB,GAAAG,OAAA4H,SACA/H,EAAAG,OAAA4H,QAAA,GAEA,YAAA/H,EAAAjB,QAAA6B,YAEAZ,EAAAa,QAAAX,QAKAF,EAAAa,QAAAX,QAGApE,EAAAE,IAAA,EAAA,kBAAAgE,EAAAX,KAAA,QAAAW,EAAAjB,QAAA6D,YACA5C,EAAAH,QAAA,QAAAG,GAEAA,IAUAxB,EAAAgB,UAAA2B,KAAA,WAEA,GAAA7E,KAAAiG,OAAAxB,OAAAzE,KAAAiG,OAAAqC,QAAA,CAEA,GAAA5E,GAAA1D,IAEA,IAAA0D,EAAAuC,OAAAqC,QA4BA,MA1BA5E,GAAAkD,YAAA4E,aAAA9H,EAAAkD,YAEAlD,EAAAjB,QAAA6D,WAAA5C,EAAAjB,QAAA4D,UAAA,EAEAqC,OAAArI,YAAA,GAAA,WAAAqD,EAAAjB,QAAA6B,WAGA,kBAAAZ,GAAAG,OAAAgB,KACAnB,EAAAG,OAAAgB,KAAA,GACA,kBAAAnB,GAAAG,OAAA4H,SACA/H,EAAAG,OAAA4H,QAAA,IAIA/H,EAAAjB,QAAA4F,UAAA,EAEA3E,EAAAa,QAAAX,QACAF,EAAAa,QAAAa,YAAA,GAGA5F,EAAAE,IAAA,EAAA,mBAAAgE,EAAAX,MACAW,EAAAuC,OAAAqC,SAAA,EACA5E,EAAAH,QAAA,OAAAG,GAEAA,EAAAjB,QAAAD,KAAAkB,EAAAjB,QAAAwF,UAEAvE,IAYAxB,EAAAgB,UAAAkD,IAAA,SAAAsF,GAEA,GAAAhD,OAAArI,UAAAL,KAAAiG,OAAAxB,OAAAzE,KAAA0F,MAAAiF,OAAA,CASA,GAPA,gBAAAe,KACA,UAAAA,EAAAA,EAAA,EACA,SAAAA,EAAAA,EAAA,IACA,SAAAA,EAAAA,EAAA,IACA,UAAAA,IAAAA,EAAA,KAGA,gBAAAA,GAAA,CAEA1L,KAAAyC,QAAA2D,IAAAsF,EAAA,GAEA,IAAAC,GAAA,sBAAAD,EAAA,IAEAE,EAAA5L,KAAAyC,QAAAyF,KAAAnB,KAAA8E,IAAAF,GACAG,EAAA9L,KAAAyC,QAAA0F,KAAApB,KAAAgF,IAAAJ,GACAK,EAAAhM,KAAAyC,QAAA2F,MAAA,EAMA,OAJApI,MAAA0F,MAAAiF,OAAAsB,YAAAL,EAAAE,EAAAE,GAEAhM,KAAAuD,QAAA,MAAAvD,KAAAyC,QAAA2D,IAAApG,MAEAA,KAGA,MAAAA,MAAAyC,QAAA2D,MAGAlE,EAAAgB,UAAAgJ,SAAA,SAAAR,EAAAS,GACA,GAAAzI,GAAA1D,IAEA,OAAA,IAAAoM,SAAA,SAAAC,EAAAC,GAmBA,MAlBA5D,QAAA3G,OAAA2G,OAAArI,UAAAqD,EAAAuC,OAAAxB,OAAAf,EAAAgC,MAAAiF,QAAA2B,EAAA3N,MAAA,oBACA,gBAAA+M,IAAA,gBAAAS,KAAAG,EAAA3N,MAAA,gCAEAa,EAAAE,IAAA,EAAA,IAAAgE,EAAAX,KAAA,oBAEAW,EAAA6E,OAAAnC,KAAA1C,EAAA6E,OAAAnC,IAAAvB,OAEAnB,EAAA6E,OAAAnC,IAAA,GAAApE,OAAAuK,OAAAC,aAAA9I,EAAAjB,QAAA2D,MACAqG,IAAAD,aAAAd,GAAAS,GACAO,OAAA1K,MAAA2K,OAAAC,WAAAC,OACAC,SAAA,WACApJ,EAAA0C,IAAApG,KAAAwM,gBAEAO,WAAA,WACAV,EAAA3I,KAEAyD,QAEAzD,KAaAxB,EAAAgB,UAAA+E,UAAA,SAAA+E,GACA,MAAA,gBAAAA,IACAhN,KAAAyC,QAAAwF,UAAA+E,EACAhN,MAEAA,KAAAyC,QAAAwF,WAKA/F,EAAAgB,UAAAV,KAAA,SAAAyK,GACA,MAAA,gBAAAA,IAEAA,EAAA3O,EAAA2B,UAAAgN,EAAA,EAAA,GAEAjN,KAAAyC,QAAAI,OACA7C,KAAAiI,UAAAgF,GACAjN,KAAAyC,QAAAD,KAAA,GAEAxC,KAAAyC,QAAAD,KAAAyK,EAGAjN,KAAAiG,OAAAqC,UAEAI,OAAArI,SAEAL,KAAA0F,OAAA1F,KAAA0F,MAAAlD,OACAxC,KAAA0F,MAAAlD,KAAAA,KAAA0K,MAAAlN,KAAAyC,QAAAD,KAAAxC,KAAAb,IAAAsD,QAAAD,MAFAxC,KAAAuE,QAAA4I,OAAAnN,KAAAyC,QAAAD,KAAAxC,KAAAb,IAAAsD,QAAAD,MAMAhD,EAAAE,IAAA,EAAA,IAAAM,KAAA+C,KAAA,qBAAA/C,KAAAyC,QAAAD,MAEAxC,KAAAuD,QAAA,OAAAvD,KAAAyC,QAAAD,KAAAxC,MAGAA,MAIAA,KAAAyC,QAAAD,MAIAN,EAAAgB,UAAAkK,UAAA,SAAAC,EAAAC,GACA,GAAA5J,GAAA1D,IACA,OAAA,IAAAoM,SAAA,SAAAC,EAAAC,IACA,gBAAAe,IAAA,gBAAAC,KAAAhB,EAAA3N,MAAA,gCACAa,EAAAE,IAAA,EAAA,IAAAgE,EAAAX,KAAA,mBAAAW,EAAAjB,QAAAD,KAAA,OAAA6K,EAAA,KAAAC,EAAA,OAGA5J,EAAA6E,OAAA/F,MAAAkB,EAAA6E,OAAA/F,KAAAqC,OAEAnB,EAAA6E,OAAA/F,KAAA,GAAAR,OAAAuK,OAAAgB,YAAA7J,EAAAjB,QAAAD,OACAiK,IAAAc,YAAAF,GAAAC,GACAZ,OAAA1K,MAAA2K,OAAAC,WAAAC,OACAC,SAAA,WACApJ,EAAAlB,KAAAxC,KAAAuN,eAEAR,WAAA,WACAV,EAAA3I,KAEAyD,WAKAjF,EAAAgB,UAAA4B,KAAA,WAMA,MALA9E,MAAAiI,UAAAjI,KAAAyC,QAAAD,MACAxC,KAAAwC,KAAA,GACAxC,KAAAyC,QAAAI,OAAA,EACA,YAAA7C,KAAAyC,QAAA6B,aACAtE,KAAAuE,QAAA1B,OAAA,GACA7C,MAGAkC,EAAAgB,UAAA6B,OAAA,WAKA,MAJA/E,MAAAyC,QAAAI,OAAA,EACA,YAAA7C,KAAAyC,QAAA6B,aACAtE,KAAAuE,QAAA1B,OAAA,GACA7C,KAAAwC,KAAAxC,KAAAyC,QAAAwF,WACAjI,MAUAkC,EAAAgB,UAAAkC,YAAA,SAAA4H,GACA,MAAAhN,MAAAiG,OAAAxB,MAEA,gBAAAuI,IAEAxN,EAAAE,IAAA,EAAA,kBAAAM,KAAA+C,KAAA,YAAAiK,GAEAtE,OAAArI,UAAA,WAAAL,KAAAyC,QAAA6B,WAEAtE,KAAAiG,OAAAqC,SACAtI,KAAA4D,MAAAoJ,GACAhN,KAAA4E,QAEA5E,KAAAyC,QAAA6D,WAAA0G,EAKAhN,KAAAuE,QAAAa,YAAA4H,EAGAhN,MAGAA,KAAAiG,OAAAqC,QAEAI,OAAArI,UAAA,WAAAL,KAAAyC,QAAA6B,WACAtE,KAAA6D,OAAAf,QAAAsC,YAAApF,KAAAyC,QAAA4D,WAAA,EAEArG,KAAAuE,QAAAa,aAAA,EALApF,KAAAyC,QAAA6D,YAAA,EAvBA,QA2CApE,EAAAgB,UAAAsK,cAAA,SAAAC,GACA,MAAAzN,MAAAiG,OAAAxB,MAEAgJ,EACA3F,EAAA9H,KAAAoF,eAAA,IAAA0C,EAAA9H,KAAA2G,YAEAmB,EAAA9H,KAAAoF,eALA,QAQAlD,EAAAgB,UAAAyD,SAAA,WACA,MAAA3G,MAAAiG,OAAAxB,MAEAiE,OAAArI,UAAA,WAAAL,KAAAyC,QAAA6B,WACAtE,KAAA6D,OAAA6C,OAAAC,UAAA,EAEA3G,KAAAuE,QAAAoC,UAAA,EALA,QAQAzH,EAAAJ,QAAAoD,IJ0YGmD,UAAU,EAAEC,WAAW,EAAEpF,UAAU,IAAIwN,GAAG,SAASlP,EAAQU,EAAOJ,GKp0CrE,GAAAR,KACAY,GAAAJ,QAAAR,EAGAA,EAAAoE,OAAA,WAKA,IAAA,GAJAiL,MACAC,EAAA/N,UACAhB,EAAA+O,EAAA5O,OAEAP,EAAA,EAAAI,EAAAJ,EAAAA,IACA,IAAA,GAAAoP,KAAAD,GAAAnP,GACAmP,EAAAnP,GAAAqP,eAAAD,KACAF,EAAAE,GAAAD,EAAAnP,GAAAoP,GACA,OAAAF,IAGArP,EAAA2B,UAAA,SAAAgN,EAAAc,EAAAC,GACA,MAAAD,GAAAd,EAAAc,EACAd,EAAAe,EAAAA,EACAf,GASA3O,EAAA8E,UACA9E,EAAA8E,OAAAD,GAAA,SAAA8K,EAAAC,GAIA,MAHAlO,MAAAoD,OAAA6K,GAAAjO,KAAAoD,OAAA6K,OACAjO,KAAAoD,OAAA6K,GAAAtK,KAAAuK,GAEAlO,MAGA1B,EAAA8E,OAAAC,IAAA,SAAA4K,EAAAC,GACA,GAAAxK,GAAA1D,IAOA,OANAA,MAAAoD,OAAA6K,GAAAjO,KAAAoD,OAAA6K,OACAjO,KAAAoD,OAAA6K,GAAAtK,KAAA,WACAD,EAAAJ,IAAA2K,GACAC,MAGAlO,MAGA1B,EAAA8E,OAAAE,IAAA,SAAA2K,GAMA,MALA,MAAAA,EACAjO,KAAAoD,UAEApD,KAAAoD,OAAA6K,MAEAjO,MAGA1B,EAAA8E,OAAAG,QAAA,SAAA0K,GAEA,GAAAjO,KAAAoD,OAAA6K,GAIA,IAAA,GAFAL,GAAAO,MAAAjL,UAAAkB,MAAArF,KAAAc,UAAA,GAEApB,EAAA,EAAAI,EAAAmB,KAAAoD,OAAA6K,GAAAjP,OAAAH,EAAAJ,EAAAA,IACA,kBAAAuB,MAAAoD,OAAA6K,GAAAxP,IACAuB,KAAAoD,OAAA6K,GAAAxP,GAAA4F,MAAArE,KAAA4N,cLg1CW","file":"helios-audio-mixer.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var mix = require('./mix');\nwindow.heliosAudioMixer = mix;","var mix = require('./mix');\nwindow.heliosAudioMixer = mix;","/*\n\n  Debug\n\n*/\n\nvar u = require('./utils')\n\nvar debug = {};\nmodule.exports = debug;\n\n// 0 no logging, 1 minimal, 2 all (spammy)\ndebug.level = 1;\n\n// u.log(1, arg, arg, arg) -> console.log('[Mixer] arg arg arg')\ndebug.log = function(lvl) {\n  if(lvl <= debug.level) {\n    var str = '[Mixer] '\n    for (var i = 1; i < arguments.length; i++)\n      str += arguments[i] + ' '\n    console.log(str)\n  }\n}\n\ndebug.setLogLvl = function(lvl) {\n  this.debug = u.constrain(lvl, 0, 2);\n  debug.log(1, 'Set log level:', lvl)\n}","var detect = {};\n\n// Web audio API support\ndetect.webAudio = !!(window.AudioContext || window.webkitAudioContext),\n\n// Which audio types can the browser actually play?\ndetect.audioTypes =(function() {\n  var el = document.createElement('audio')\n\n  return {\n    '.m4a': !!(el.canPlayType && el.canPlayType('audio/mp4; codecs=\"mp4a.40.2\"').replace(/no/, '')),\n    '.mp3': !!(el.canPlayType && el.canPlayType('audio/mpeg;').replace(/no/, '')),\n    '.ogg': !!(el.canPlayType && el.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, ''))\n  }\n})(),\n\ndetect.videoTypes = (function() {\n\n  var el = document.createElement('video')\n\n  return {\n    '.webm': !!(el.canPlayType && el.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, '')),\n    '.mp4':  !!(el.canPlayType && el.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, '')),\n    '.ogv':  !!(el.canPlayType && el.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, ''))\n  }\n})(),\n\n// prefer bowser, but with fallback\ndetect.browser = (function() {\n\n  if(typeof bowser !== 'undefined') return bowser;\n\n  return {\n    firefox: !!navigator.userAgent.match(/Firefox/g),\n    android: !!navigator.userAgent.match(/Android/g),\n    msie:    !!navigator.userAgent.match(/MSIE/g),\n    ios:     !!navigator.userAgent.match(/(iPad|iPhone|iPod)/g),\n\n    version: false\n  };\n})(),\n\n// is tween.js present?\ndetect.tween = (function() {\n  return (typeof TWEEN === 'undefined') ? false : true\n})()\n\nmodule.exports = detect;","/*\n\n  ###  ### #### ##   ##\n  ########  ##   ## ##\n  ## ## ##  ##    ###\n  ##    ##  ##   ## ##\n  ##    ## #### ##   ##\n\n*/\n\nvar u = require('./utils')\nvar Track = require('./track')\nvar detect = require('./detect')\nvar debug = require('./debug')\n\n\nvar Mix = function(opts) {\n\n  this.Track = Track\n\n  this.setLogLvl = debug.setLogLvl\n\n  var defaults = {\n    fileTypes: [ '.mp3', '.m4a', '.ogg' ],\n    html5: false,\n    gain: 1, // master gain for entire mix\n  }\n  this.options = u.extend(defaults, opts || {})\n\n  this.tracks  = [];    // tracks as numbered array\n  this.lookup  = {};    // tracks as lookup table: lookup['trackname']\n\n  this.muted   = false; // master mute status\n\n  this.context = null;  // AudioContext object (if webAudio is available)\n\n  this.detect  = detect; // external reference to detect object\n\n\n  // Web Audio support overrides\n  // ********************************************************\n\n  if(\n    (detect.browser.name === 'Firefox' && detect.version && detect.version < 25) || // Firefox < 25\n    (detect.browser.ios === true && detect.browser.version === 7) ||                 // ios 7\n    this.options.html5\n ) {\n    detect.webAudio = false;\n  }\n\n\n  // File Types\n  // ********************************************************\n\n  for (var i = this.options.fileTypes.length - 1; i >= 0; i--) {\n    if(!detect.audioTypes[ this.options.fileTypes[i] ])\n      this.options.fileTypes.splice(i, 1);\n  }\n\n  if(this.options.fileTypes.length <= 0) {\n    console.warn('Can’t initialize: none of the specified audio types can play in this browser.')\n    return;\n  }\n\n\n  // Initialize\n  // ********************************************************\n\n  if(detect.webAudio === true) {\n    this.context = (typeof AudioContext === 'function' ? new window.AudioContext() : new window.webkitAudioContext() )\n  }\n\n  debug.log(1, 'initialized,', (detect.webAudio ? 'Web Audio Mode,' : 'HTML5 Mode,'), 'can play:', this.options.fileTypes)\n\n  return this\n\n};\n\n/*\n\n  Event Functionality\n\n*/\nMix.prototype.on = u.events.on;\nMix.prototype.one = u.events.one;\nMix.prototype.off = u.events.off;\nMix.prototype.trigger = u.events.trigger;\n\n\n/**************************************************************************\n\n  Track Management\n\n**************************************************************************/\n\nMix.prototype.createTrack = function(name, opts) {\n\n  var _this = this;\n  var track;\n\n  if(!name)\n    debug.log(0, 'Can’t create track with no name')\n\n  if(detect.webAudio === true) {\n\n    if(this.lookup[name]) {\n      debug.log(0, 'a track named “' + _this.name + '” already exists')\n      return\n    }\n\n\n    track = new Track(name, opts, _this);\n\n    this.tracks.push(track);\n    this.lookup[name] = track;\n\n  } else {\n\n    track = this.lookup[name];\n\n    if(!track) { // create new track\n\n      track = new Track(name, opts, _this);\n\n      this.tracks.push(track);\n      this.lookup[ name ] = track;\n\n    } else { // change source\n\n      track.pause();\n\n      track.options = u.extend(track, track.defaults, opts || {});\n\n      if(track.options.source) {\n        track.options.source  += _this.mix.options.fileTypes[0];\n        track.createHTML5elementSource();\n      }\n    }\n  }\n\n  return track;\n\n};\n\n\nMix.prototype.removeTrack = function(_input) {\n\n  var _this = this\n\n  var track, name\n\n  if(typeof _input === 'string')\n    name = _input\n  else if(typeof _input === 'object' && _input.name)\n    name = _input.name\n\n  var track = _this.lookup[name]\n\n  if(!track) {\n    debug.log(1, 'can’t remove \"' + name + '\", it doesn’t exist');\n    return;\n  }\n\n  if(detect.webAudio === true) {\n\n    track.pause();\n\n    var rest\n    var arr   = _this.tracks\n    var total = arr.length\n\n    for (var i = 0; i < total; i++) {\n      if(arr[i] && arr[i].name === name) {\n        rest = arr.slice(i + 1 || total);\n        arr.length = (i < 0) ? (total + i) : (i);\n        arr.push.apply(arr, rest);\n      }\n    }\n\n    track.trigger('remove', _this);\n    track.events = [];\n\n    // stop memory leaks!\n    if(track.options.sourceMode === 'element' && track.element)\n      track.element.src = '';\n\n    track = null;\n    delete _this.lookup[name];\n    debug.log(1, 'Removed track \"' + name + '\"');\n\n  } else {\n\n    track.pause();\n\n    track.element.src = '';\n    track.source = '';\n\n    track.ready = false;\n    track.loaded = false;\n\n  }\n\n};\n\n\nMix.prototype.getTrack = function(name) {\n  return this.lookup[name] || false;\n};\n\n\n\n\n\n/**************************************************************************\n\n  Global Mix Control\n\n**************************************************************************/\n\nMix.prototype.pause = function() {\n\n  debug.log(1, 'Pausing ' + this.tracks.length + ' track(s) ||')\n\n  for (var i = 0; i < this.tracks.length; i++)\n    this.tracks[i].pause()\n};\n\nMix.prototype.play = function() {\n\n  debug.log(1, 'Playing ' + this.tracks.length + ' track(s) >')\n\n  for (var i = 0; i < this.tracks.length; i++)\n    this.tracks[i].play()\n};\n\nMix.prototype.stop = function() {\n\n  debug.log(1, 'Stopping ' + this.tracks.length + ' track(s) .')\n\n  for (var i = 0; i < this.tracks.length; i++)\n     this.tracks[i].stop()\n};\n\n\n\n\nMix.prototype.mute = function() {\n  if(this.muted) return\n  this.muted = true\n  debug.log(1, 'Muting ' + this.tracks.length + ' tracks')\n  for (var i = 0; i < this.tracks.length; i++)\n    this.tracks[i].mute();\n};\n\n\nMix.prototype.unmute = function() {\n  if(!this.muted) return\n  this.muted = false\n  debug.log(1, 'Unmuting ' + this.tracks.length + ' tracks')\n  for (var i = 0; i < this.tracks.length; i++)\n    this.tracks[i].unmute();\n};\n\n\n\nMix.prototype.gain = function(masterGain) {\n  if(typeof masterGain !== 'undefined') {\n    this.options.gain = masterGain;\n\n    // this seems silly, but tracks multiply their gain by the master's\n    // so if we change the master gain and call track.gain() we will\n    // get the intended result\n    for (var i = 0; i < this.tracks.length; i++)\n      this.tracks[i].gain(this.tracks[i].gain());\n  }\n\n  return this.options.gain;\n}\n\n\n\n\n/**************************************************************************\n\n  Utilities\n\n**************************************************************************/\n\n\n// call this using requestanimationframe\nMix.prototype.updateTween = function() {\n  TWEEN.update();\n};\n\n\n\n\nMix.prototype.report = function(){\n  var report = \"\"\n  for (var i = 0; i < this.tracks.length; i++) {\n    report += this.tracks[i].gain() + '\\t' + this.tracks[i].currentTime() + '\\t' + this.tracks[i].name + '\\n'\n  }\n  console.log(report)\n}\n\n\n\n\n\nmodule.exports = Mix;","/*\n\n  ###### #####   #####   ##### ##  ##\n    ##   ##  ## ##   ## ##     ## ##\n    ##   #####  ####### ##     ####\n    ##   ##  ## ##   ## ##     ## ##\n    ##   ##  ## ##   ##  ##### ##  ##\n\n*/\n\nvar u = require('./utils')\nvar detect = require('./detect')\nvar debug = require('./debug');\n\nvar Track = function(name, opts, mix) {\n\n  this.defaults = {\n\n    sourceMode: 'buffer', // buffer or (media) element\n\n    source: false,   // either path to audio source (without file extension) or b) html5 <audio> or <video> element\n\n    nodes:      [],  // array of strings: names of desired additional audio nodes\n\n    gain:        1,  // initial/current gain (0-1)\n    gainCache:   false,  // for resuming from mute\n\n    pan:         0,  // circular horizontal pan\n\n    panX:        0,  // real 3d pan\n    panY:        0,  //\n    panZ:        0,  //\n\n    start:       0,  // start time in seconds\n    cachedTime:  0,  // local current time (cached for resuming from pause)\n    startTime:   0,  // time started (cached for accurately reporting currentTime)\n\n    looping:  false, //\n    autoplay: true,  // play immediately on load\n    muted:    (mix.muted) ? true : false\n  };\n\n  // override option defaults\n  this.options = u.extend(this.defaults, opts || {});\n\n  if(this.options.gainCache === false)\n    this.options.gainCache = this.options.gain\n\n  this.name = name;\n\n  // Status\n  this.status = {\n    loaded:  false,\n    ready:   false,\n    playing: false\n  }\n\n  this.mix     = mix;  // reference to parent\n\n  this.events  = {};\n  this.tweens  = {};\n  this.nodes   = undefined;   // holds the web audio nodes (gain and pan are defaults, all other optional)\n\n  this.onendtimer = undefined;  // web audio api in chrome doesn't support onend event yet :(\n\n  this.element = undefined; // html5 <audio> or <video> element\n  this.source  = undefined; //  web audio source:\n\n  if(typeof this.options.source === 'string' && this.options.source.indexOf('blob:') !== 0) {\n    // append extension only if it’s a file path\n    this.options.source  += this.mix.options.fileTypes[0];\n  } else if(typeof this.options.source === 'object') {\n    // otherwise switch mode to element\n    this.options.sourceMode = 'element'\n  }\n\n  debug.log(1, 'createTrack \"' + this.name + '\", mode: \"' + this.options.sourceMode + '\", autoplay: ' + this.options.autoplay);\n\n\n\n  // Load\n  // ~~~~\n\n  if(Detect.webAudio === true) {\n\n    // Web Audio\n\n    if(!this.options.source) {\n      debug.log(1, 'Creating track \"' + name + '\" without a source');\n      return;\n    }\n\n    if(this.options.sourceMode === 'buffer') {\n\n      this.loadBufferSource()\n\n    } else if(this.options.sourceMode === 'element') {\n\n      if(typeof this.options.source === 'object')\n        this.useHTML5elementSource()\n      else\n        this.createHTML5elementSource()\n\n    }\n\n  } else {\n\n    // HTML5\n\n    debug.log(1, 'creating html5 element for track ' + name);\n\n    // Look for pre-created audio element and failing that create one\n    this.element = document.querySelector('audio#' + name);\n\n    if(!this.element) {\n      var el = document.createElement('audio');\n      el.id = name;\n      document.body.appendChild(el);\n      this.element = document.querySelector('audio#' + name);\n    }\n\n    var canplay = function() {\n      if(this.status.loaded) return;\n\n      this.status.loaded = true;\n      this.status.ready = true;\n\n      if(!this.options.autoplay)\n        this.pause();\n\n      this.trigger('load', this);\n    }\n\n    var _this = this\n\n    // canplaythrough listener\n    _this.element.addEventListener('canplaythrough', canplay, false);\n    _this.element.addEventListener('load',           canplay, false);\n\n    // Looping\n    _this.element.addEventListener('ended', function() {\n\n      if(_this.options.looping) {\n\n        debug.log(2, 'Track ' + _this.name + ' looping')\n\n        _this.element.currentTime = 0;\n        _this.element.play();\n\n      } else {\n\n        _this.trigger('ended', _this);\n        _this.mix.removeTrack(_this.name);\n      }\n\n    }, false);\n\n    this.createHTML5elementSource(this.options.source);\n  }\n};\n\n\n/*\n\n  Event Functionality\n\n*/\nTrack.prototype.on = u.events.on;\nTrack.prototype.one = u.events.one;\nTrack.prototype.off = u.events.off;\nTrack.prototype.trigger = u.events.trigger;\n\n\n\n\n\n\n// ##    ######   #####  ######\n// ##   ##    ## ##   ## ##   ##\n// ##   ##    ## ####### ##   ##\n// ##   ##    ## ##   ## ##   ##\n// ##### ######  ##   ## ######\n\n// Create out-of-DOM html5 <audio> element as source\nTrack.prototype.createHTML5elementSource = function() {\n\n  var _this = this;\n  if(!_this.options.source) return;\n\n  debug.log(2, 'Track \"' + this.name + '\" creating HTML5 element source: \"' + _this.options.source + _this.mix.options.fileTypes[0]  + '\"');\n  _this.status.ready = false\n\n  var src = _this.options.source\n\n  _this.options.source = document.createElement('audio')\n  _this.options.source.crossOrigin = ''\n  _this.options.source.src = src\n\n  _this.useHTML5elementSource()\n}\n\n// Use existing in-DOM html5 <audio> or <video> element as source\nTrack.prototype.useHTML5elementSource = function() {\n\n  var _this = this;\n  if(!_this.options.source) return;\n\n  debug.log(2, 'Track \"' + this.name + '\" use HTML5 element source: \"' + _this.options.source + '\"')\n\n  _this.element = _this.options.source\n  _this.options.source.crossOrigin = ''\n  _this.options.source = _this.element.src\n\n  /**\n   * Add options if they're set.\n   */\n  if (_this.options.looping) { _this.element.loop  = true; }\n  if (_this.options.muted)   { _this.element.muted = true; }\n\n  if(_this.mix.context)\n    _this.source = _this.mix.context.createMediaElementSource(_this.element);\n\n  var ready = function() {\n    _this.status.loaded = true\n    if(_this.options.autoplay) _this.play();\n    _this.trigger('load', _this);\n  }\n\n  _this.element.addEventListener('canplaythrough', ready)\n  _this.element.addEventListener('error', function() { _this.trigger('loadError') })\n\n  _this.element.load()\n\n  return _this\n}\n\nTrack.prototype.loadBufferSource = function(forcePlay) {\n\n  var _this = this;\n  if(!_this.options.source) return;\n\n  debug.log(2, 'Track \"' + this.name + '\" webAudio source: \"' + _this.options.source + '\"')\n\n  var request = new XMLHttpRequest();\n  request.open('GET', _this.options.source, true);\n  request.responseType = 'arraybuffer';\n\n  // asynchronous callback\n  request.onload = function() {\n    debug.log(2, '\"' + _this.name + '\" loaded \"' + _this.options.source + '\"');\n    _this.options.audioData = request.response; // cache the audio data\n    _this.status.loaded = true;\n    _this.trigger('load', _this);\n    if(forcePlay){\n      _this.play(true)\n    } else {\n      if(_this.options.autoplay) _this.play();\n    }\n  }\n\n  request.onerror = function() {\n    debug.log(1, 'couldn’t load track \"' + _this.name + '\" with source \"' + _this.options.source + '\"')\n    _this.trigger('loadError', _this)\n  }\n\n  request.send();\n}\n\n\n\n\n\n\n\n\n\n// ###  ##  ######  ######  ######  ####\n// #### ## ##    ## ##   ## ##     ##\n// ## #### ##    ## ##   ## #####   ####\n// ##  ### ##    ## ##   ## ##         ##\n// ##   ##  ######  ######  ###### #####\n\n\n// AudioNode Creation\n// -> this function can be chained\n\nTrack.prototype.addNode = function(nodeType) {\n\n  var _this = this;\n\n  // if this is the first time we’re calling addNode, connect directly to the source\n  if(!_this.nodes.lastnode) _this.nodes.lastnode = _this.source;\n\n  debug.log(2, ' +  addNode ' + nodeType);\n\n  // Analyser and Processor ********************************************************\n\n  if(nodeType === 'analyse') {\n\n    // create a script processor with bufferSize of 2048\n    _this.nodes.processor = _this.mix.context.createScriptProcessor(2048, 1, 1)\n\n    // create an analyser\n    _this.nodes.analyser = _this.mix.context.createAnalyser()\n    _this.nodes.analyser.smoothingTimeConstant = 0.5\n    _this.nodes.analyser.fftSize = 32\n\n    _this.nodes.processor.connect(_this.mix.context.destination) // processor -> destination\n    _this.nodes.analyser.connect(_this.nodes.processor)          // analyser -> processor\n\n    // define a Uint8Array to receive the analyser’s data\n    _this.options.bufferLength = new Uint8Array(_this.nodes.analyser.frequencyBinCount)\n    var analyserData = new Uint8Array(_this.options.bufferLength)\n\n    _this.nodes.lastnode.connect(_this.nodes.analyser)\n\n    _this.nodes.processor.onaudioprocess = function(){\n      _this.nodes.analyser.getByteTimeDomainData(analyserData)\n      _this.trigger('analyse', analyserData)\n    }\n  }\n\n  // Gain ********************************************************\n  // http://www.w3.org/TR/webaudio/#GainNode\n\n  else if(nodeType === 'gain') {\n\n    if(_this.mix.context.createGainNode)\n      _this.nodes.gain = _this.mix.context.createGainNode();\n    else\n      _this.nodes.gain = _this.mix.context.createGain();\n\n    // connect last created node to newly created node\n    _this.nodes.lastnode.connect(_this.nodes.gain);\n\n    // set newly created node to last node in the chain\n    _this.nodes.lastnode = _this.nodes.gain;\n\n  }\n\n  // Panner ********************************************************\n  // http://www.w3.org/TR/webaudio/#PannerNode\n\n  else if(nodeType === 'panner') {\n\n    if(window.AudioContext) {\n\n      _this.nodes.panner = _this.mix.context.createPanner();\n      // _this.nodes.panner.panningModel = 'equalpower';\n      // _this.nodes.panner.panningModel = 'HRTF';\n\n    } else if(window.webkitAudioContext) {\n\n      _this.nodes.panner = _this.mix.context.createPanner();\n      // _this.nodes.panner.panningModel = webkitAudioPannerNode.EQUALPOWER;\n      // _this.nodes.panner.panningModel = _this.nodes.panner.EQUALPOWER;\n\n    } else {\n      return _this;\n    }\n\n    _this.nodes.lastnode.connect(_this.nodes.panner);\n    _this.nodes.lastnode = _this.nodes.panner;\n\n  }\n\n  // Convolver (Reverb etc) **********************************************\n  // http://www.w3.org/TR/webaudio/#ConvolverNode\n\n  else if(nodeType === 'convolver') {\n\n    if(!_this.mix.context.createConvolver) return _this;\n\n    _this.nodes.convolver = _this.mix.context.createConvolver();\n\n    // TODO: implement loading impulse response for the convolver node\n    // http://chromium.googlecode.com/svn/trunk/samples/audio/impulse-responses/\n\n    // _this.nodes.convolver.buffer = convolverBuffer;\n\n\n  }\n\n  // Compressor ********************************************************\n  // http://www.w3.org/TR/webaudio/#DynamicsCompressorNode\n\n  else if(nodeType === 'compressor') {\n\n    _this.nodes.compressor = _this.mix.context.createDynamicsCompressor();\n\n    // no settings required really…\n\n    _this.nodes.lastnode.connect(_this.nodes.compressor);\n    _this.nodes.lastnode = _this.nodes.compressor;\n\n  }\n\n  // Delay ********************************************************\n  // http://www.w3.org/TR/webaudio/#DelayNode\n\n  else if(nodeType === 'delay') {\n\n    if(Detect.nodes.delayNode)\n      _this.nodes.delay = _this.mix.context.createDelayNode();\n    else\n      _this.nodes.delay = _this.mix.context.createDelay();\n\n    _this.nodes.delay.delayTime = 0;\n\n    _this.nodes.lastnode.connect(_this.nodes.delay);\n    _this.nodes.lastnode = _this.nodes.delay;\n\n  }\n\n  // it’s chainable\n  return _this;\n}\n\n\n// ######  ##     ##### ##    ##\n// ##   ## ##    ##   ## ##  ##\n// ######  ##    #######  ####\n// ##      ##    ##   ##   ##\n// ##      ##### ##   ##   ##\n\nTrack.prototype.play = function(bufferSourceLoaded) {\n\n  var _this = this;\n\n  if(!_this.status.loaded) {\n    debug.log(1, 'Can’t play track \"' + _this.name + '\", not loaded')\n    return;\n  }\n\n  if(_this.status.playing === true) return;\n  _this.status.playing = true;\n\n  if(!Detect.webAudio)\n    playSingleElement(_this)\n\n  else if(Detect.webAudio && _this.options.sourceMode === 'buffer'){\n    // need to re-xhr the audio file so we loop back to load\n    if(bufferSourceLoaded)\n      playBufferSource(_this)\n    else {\n      _this.status.playing = false;\n      _this.loadBufferSource(true) // loop back to load\n    }\n  }\n\n  else if(Detect.webAudio && _this.options.sourceMode === 'element')\n    playElementSource(_this)\n\n\n  return _this\n}\n\n\nfunction playCreateNodes(_this) {\n\n  debug.log(2, 'Creating nodes for track \"' + _this.name + '\"')\n\n  // Create Nodes\n  // ~~~~~~~~~~~~\n\n  _this.nodes = {}\n\n  // 1. Create standard nodes (gain and pan)\n  _this.addNode('panner').addNode('gain')\n\n  // 2. Create additional nodes\n  if(_this.options.nodes.length){\n    for (var i = 0; i < _this.options.nodes.length; i++) {\n      _this.addNode( _this.options.nodes[i] );\n    }\n  }\n\n  // 3. Connect the last node in the chain to the destination\n  _this.nodes.lastnode.connect(_this.mix.context.destination);\n\n}\n\n// ********************************************************\n\nfunction playElementSource(_this) {\n\n  // unlike buffer mode, we only need to construct the nodes once\n  if( !_this.nodes ) {\n\n    playCreateNodes(_this)\n\n    // we also only want one event listener\n    _this.element.addEventListener('ended', function() {\n      _this.trigger('ended', _this)\n    }, false)\n  }\n\n\n  // Apply Options\n  // ~~~~~~~~~~~~~~\n\n  _this.status.ready = true;\n  _this.trigger('ready', _this);\n\n  if(_this.options.looping) _this.element.loop = true;\n  else                      _this.element.loop = false;\n\n  _this.gain(_this.options.gain)\n  _this.pan(_this.options.pan)\n\n  // Start Time\n\n  _this.options.startTime = _this.element.currentTime - _this.options.cachedTime;\n  var startFrom = _this.options.cachedTime || 0;\n\n  debug.log(1, 'Playing track \"' + _this.name + '\" from ' + startFrom + ' (' + _this.options.startTime + ') gain ' + _this.gain());\n\n  // Play!\n\n  _this.element.currentTime = startFrom;\n  _this.element.play()\n\n  _this.trigger('play', _this)\n\n}\n\n\n// ********************************************************\n\nfunction setEndTimer(){\n  var _this = this\n  var startFrom = _this.options.cachedTime || 0\n  var timerDuration = (_this.source.buffer.duration - startFrom)\n\n  _this.onendtimer = setTimeout(function() {\n    _this.trigger('ended', _this)\n\n    if(_this.options.looping){\n\n      if(bowser && bowser.chrome && Math.floor(bowser.version) >= 42){\n        // HACK chrome 42+ looping fix\n        _this.stop()\n        _this.play()\n      } else {\n        setEndTimer.call(_this)\n      }\n\n    }\n\n  }, timerDuration * 1000)\n}\n\nfunction playBufferSource(_this) {\n\n  _this.status.ready = false\n\n  // Construct Audio Buffer\n  // ~~~~~~~~~~~~~~~~~~~~~~\n\n  // (we have to re-construct the buffer every time we begin play)\n\n  _this.source = null\n\n  // *sigh* async makes for such messy code\n  var finish = function() {\n\n    playCreateNodes(_this)\n\n    _this.status.ready = true;\n    _this.trigger('ready', _this);\n\n    // Apply Options\n    _this.source.loop = (_this.options.looping) ? true : false\n    _this.gain(_this.options.gain)\n    _this.pan(_this.options.pan)\n\n\n    // Play\n    // ~~~~\n\n    _this.options.startTime = _this.source.context.currentTime - _this.options.cachedTime;\n    var startFrom = _this.options.cachedTime || 0;\n\n    debug.log(2, 'Playing track \"' + _this.name + '\" from ' + startFrom + ' (' + _this.options.startTime + ') gain ' + _this.gain());\n\n    // prefer start() but fall back to deprecated noteOn()\n    if(typeof _this.source.start === 'function') _this.source.start(0, startFrom);\n    else                                         _this.source.noteOn(startFrom);\n\n    // fake ended event\n    _this.onendtimer = false\n    setEndTimer.call(_this)\n\n\n    _this.trigger('play', _this)\n\n  }\n\n\n  // Create source\n  // ~~~~~~~~~~~~~\n\n  // W3C standard implementation (Firefox, recent Chrome)\n  if(typeof _this.mix.context.createGain === 'function') {\n\n    _this.mix.context.decodeAudioData(_this.options.audioData, function(decodedBuffer){\n      if(_this.status.ready) return\n\n      _this.source        = _this.mix.context.createBufferSource();\n      var sourceBuffer    = decodedBuffer;\n      _this.source.buffer = sourceBuffer;\n\n      finish()\n    })\n  }\n\n  // Non-standard Webkit implementation (Safari, old Chrome)\n  else if(typeof _this.mix.context.createGainNode === 'function') {\n\n    _this.source = _this.mix.context.createBufferSource();\n    var sourceBuffer  = _this.mix.context.createBuffer(_this.options.audioData, true);\n    _this.source.buffer = sourceBuffer;\n\n    finish()\n  }\n}\n\n// ********************************************************\n\nfunction playSingleElement(_this) {\n\n  debug.log(1, 'Playing track \"' + _this.name + '\" >')\n\n  _this.gain(_this.options.gain)\n\n  _this.status.ready  = true;\n  _this.element.play();\n  _this.trigger('play', _this);\n}\n\n\n// ######   #####  ##   ##  ####  ######\n// ##   ## ##   ## ##   ## ##     ##\n// ######  ####### ##   ##  ####  #####\n// ##      ##   ## ##   ##     ## ##\n// ##      ##   ##  #####  #####  ######\n\n\nTrack.prototype.pause = function(at) {\n\n  if(!this.status.ready || !this.status.playing) return;\n\n  var _this = this;\n\n  // cache time to resume from later\n  if(typeof at === 'number') _this.options.cachedTime = at;\n  else                         _this.options.cachedTime = _this.currentTime();\n\n  _this.status.playing = false;\n\n  if(_this.onendtimer) clearTimeout(_this.onendtimer);\n\n  if(Detect.webAudio === true) {\n\n    if(_this.options.sourceMode === 'buffer') {\n\n      // prefer stop(), fallback to deprecated noteOff()\n      if(typeof _this.source.stop === 'function')\n        _this.source.stop(0);\n      else if(typeof _this.source.noteOff === 'function')\n        _this.source.noteOff(0);\n\n    } else if(_this.options.sourceMode === 'element') {\n\n      _this.element.pause()\n    }\n\n  } else {\n\n    _this.element.pause();\n  }\n\n  debug.log(2, 'Pausing track \"' + _this.name + '\" at ' + _this.options.cachedTime)\n  _this.trigger('pause', _this);\n\n  return _this\n}\n\n\n//  #### ###### ######  ######\n// ##      ##  ##    ## ##   ##\n//  ####   ##  ##    ## ######\n//     ##  ##  ##    ## ##\n// #####   ##   ######  ##\n\nTrack.prototype.stop = function() {\n\n  if(!this.status.ready || !this.status.playing) return;\n\n  var _this = this;\n\n  if(!_this.status.playing) return\n\n  if(_this.onendtimer) clearTimeout(_this.onendtimer)\n\n  _this.options.cachedTime = _this.options.startTime = 0\n\n  if(Detect.webAudio === true && _this.options.sourceMode === 'buffer') {\n\n    // prefer stop(), fallback to deprecated noteOff()\n    if(typeof _this.source.stop === 'function')\n      _this.source.stop(0);\n    else if(typeof _this.source.noteOff === 'function')\n      _this.source.noteOff(0);\n\n  } else {\n\n    _this.options.autoplay = false;\n\n    _this.element.pause();\n    _this.element.currentTime = 0;\n  }\n\n  debug.log(2, 'Stopping track \"' + _this.name)\n  _this.status.playing = false\n  _this.trigger('stop', _this);\n\n  _this.options.gain = _this.options.gainCache;\n\n  return _this\n\n}\n\n\n// ######   #####  ###  ##\n// ##   ## ##   ## #### ##\n// ######  ####### ## ####\n// ##      ##   ## ##  ###\n// ##      ##   ## ##   ##\n\n// proper 3d stereo panning\nTrack.prototype.pan = function(angleDeg) {\n\n  if( !Detect.webAudio || !this.status.ready || !this.nodes.panner ) return\n\n  if(typeof angleDeg === 'string') {\n    if(     angleDeg === 'front') angleDeg =   0;\n    else if(angleDeg === 'back' ) angleDeg = 180;\n    else if(angleDeg === 'left' ) angleDeg = 270;\n    else if(angleDeg === 'right') angleDeg =  90;\n  }\n\n  if(typeof angleDeg === 'number') {\n\n    this.options.pan = angleDeg % 360;\n\n    var angleRad = (-angleDeg + 90) * 0.017453292519943295; // * PI/180\n\n    var x = this.options.panX = Math.cos(angleRad);\n    var y = this.options.panY = Math.sin(angleRad);\n    var z = this.options.panZ = -0.5;\n\n    this.nodes.panner.setPosition(x, y, z);\n\n    this.trigger('pan', this.options.pan, this)\n\n    return this // all setters should be chainable\n  }\n\n  return this.options.pan\n}\n\nTrack.prototype.tweenPan = function(angleDeg, tweenDuration) {\n  var _this = this;\n\n  return new Promise(function(resolve, reject){\n    if( !Detect.tween || !Detect.webAudio || !_this.status.ready || !_this.nodes.panner ) reject(Error('nope nope nope'))\n    if( typeof angleDeg !== 'number' || typeof tweenDuration !== 'number' ) reject(Error('Not a valid tween duration.'))\n\n    debug.log(2, '\"' + _this.name + '\" tweening pan2d')\n\n    if(_this.tweens.pan) _this.tweens.pan.stop()\n\n    _this.tweens.pan = new TWEEN.Tween({ currentAngle: _this.options.pan })\n      .to({ currentAngle: angleDeg }, tweenDuration)\n      .easing(TWEEN.Easing.Sinusoidal.InOut)\n      .onUpdate(function() {\n        _this.pan(this.currentAngle)\n      })\n      .onComplete(function() {\n        resolve(_this)\n      })\n      .start()\n\n    return _this\n\n  })\n}\n\n\n//  #####   #####  #### ###  ##\n// ##      ##   ##  ##  #### ##\n// ##  ### #######  ##  ## ####\n// ##   ## ##   ##  ##  ##  ###\n//  #####  ##   ## #### ##   ##\n\n// cache current gain for restoring later\nTrack.prototype.gainCache = function(setTo) {\n  if(typeof setTo === 'number') {\n    this.options.gainCache = setTo;\n    return this\n  } else {\n    return this.options.gainCache\n  }\n}\n\n// gain range 0-1\nTrack.prototype.gain = function(val) {\n  if(typeof val === 'number') {\n\n    val = u.constrain(val, 0, 1) // normalize value\n\n    if(this.options.muted) {\n      this.gainCache(val) // cache the value\n      this.options.gain = 0\n    } else {\n      this.options.gain = val\n    }\n\n    if(this.status.playing) {\n\n      if(!Detect.webAudio)\n        this.element.volume = this.options.gain * this.mix.options.gain\n      else if( this.nodes && this.nodes.gain )\n        this.nodes.gain.gain.value = this.options.gain * this.mix.options.gain\n\n    }\n\n    debug.log(2, '\"' + this.name + '\" setting gain to ' + this.options.gain)\n\n    this.trigger('gain', this.options.gain, this)\n\n    // setters should be chainable\n    return this\n\n  }\n\n  return this.options.gain\n\n}\n\nTrack.prototype.tweenGain = function(_val, _tweenDuration) {\n  var _this = this;\n  return new Promise(function(resolve, reject){\n    if(typeof _val !== 'number' || typeof _tweenDuration !== 'number') reject(Error('Invalid value for duration.'))\n    debug.log(2, '\"' + _this.name + '\" tweening gain ' + _this.options.gain + ' -> ' + _val + ' ('+_tweenDuration+'ms)')\n\n    // replace existing gain tween\n    if(_this.tweens.gain) _this.tweens.gain.stop()\n\n    _this.tweens.gain = new TWEEN.Tween({ currentGain: _this.options.gain })\n      .to({ currentGain: _val }, _tweenDuration)\n      .easing(TWEEN.Easing.Sinusoidal.InOut)\n      .onUpdate(function() {\n        _this.gain(this.currentGain)\n      })\n      .onComplete(function() {\n        resolve(_this)\n      })\n      .start()\n\n  })\n}\n\nTrack.prototype.mute = function() {\n  this.gainCache(this.options.gain)\n  this.gain(0)\n  this.options.muted = true\n  if(this.options.sourceMode === 'element')\n    this.element.muted = true\n  return this\n}\n\nTrack.prototype.unmute = function() {\n  this.options.muted = false;\n  if(this.options.sourceMode === 'element')\n    this.element.muted = false\n  this.gain(this.options.gainCache)\n  return this\n}\n\n\n//  ##### ##   ## #####  ###### ###  ## ###### ###### #### ###  ### ######\n// ##     ##   ## ##  ## ##     #### ##   ##     ##    ##  ######## ##\n// ##     ##   ## #####  #####  ## ####   ##     ##    ##  ## ## ## #####\n// ##     ##   ## ##  ## ##     ##  ###   ##     ##    ##  ##    ## ##\n//  #####  #####  ##  ## ###### ##   ##   ##     ##   #### ##    ## ######\n\nTrack.prototype.currentTime = function(setTo) {\n  if(!this.status.ready) return;\n\n  if(typeof setTo === 'number') {\n\n    debug.log(2, 'setting track \"' + this.name + '\" to time', setTo)\n\n    if(Detect.webAudio && this.options.sourceMode === 'buffer') {\n\n      if(this.status.playing) {\n        this.pause(setTo);\n        this.play();\n      } else {\n        this.options.cachedTime = setTo;\n      }\n\n    } else {\n\n      this.element.currentTime = setTo;\n    }\n\n    return this\n  }\n\n  if(!this.status.playing) return this.options.cachedTime || 0;\n\n  if(Detect.webAudio && this.options.sourceMode === 'buffer')\n    return this.source.context.currentTime - this.options.startTime || 0;\n  else\n    return this.element.currentTime || 0;\n}\n\n/**************************************************************************\n\n  Getters Only\n\n**************************************************************************/\n\nfunction timeFormat(seconds) {\n  var m = Math.floor(seconds / 60) < 10 ? '0' + Math.floor(seconds / 60) : Math.floor(seconds / 60);\n  var s = Math.floor(seconds - (m * 60)) < 10 ? '0' + Math.floor(seconds - (m * 60)) : Math.floor(seconds - (m * 60));\n  return m + ':' + s;\n}\n\nTrack.prototype.formattedTime = function(includeDuration) {\n  if(!this.status.ready) return;\n\n  if(includeDuration)\n    return timeFormat(this.currentTime()) + '/' + timeFormat(this.duration());\n  else\n    return timeFormat(this.currentTime());\n}\n\nTrack.prototype.duration = function() {\n  if(!this.status.ready) return;\n\n  if(Detect.webAudio && this.options.sourceMode === 'buffer')\n    return this.source.buffer.duration || 0;\n  else\n    return this.element.duration || 0;\n}\n\nmodule.exports = Track;","/*\n\n  Utils\n\n*/\n\nvar u = {};\nmodule.exports = u;\n\n\nu.extend = function() {\n  var output = {}\n  var args = arguments\n  var l = args.length\n\n  for (var i = 0; i < l; i++)\n    for (var key in args[i])\n      if(args[i].hasOwnProperty(key))\n        output[key] = args[i][key];\n  return output;\n}\n\nu.constrain = function(val, min, max) {\n  if(val < min) return min;\n  if(val > max) return max;\n  return val;\n}\n\n\n/*\n\n  Events\n\n*/\nu.events = {};\nu.events.on = function(type, callback) {\n  this.events[type] = this.events[type] || [];\n  this.events[type].push(callback);\n\n  return this\n}\n\nu.events.one = function(type, callback) {\n  var _this = this\n  this.events[type] = this.events[type] || [];\n  this.events[type].push(function(){\n    _this.off(type)\n    callback()\n  });\n\n  return this\n}\n\nu.events.off = function(type) {\n  if(type === '*')\n    this.events = {};\n  else\n    this.events[type] = [];\n\n  return this\n}\n\nu.events.trigger = function(type) {\n\n  if(!this.events[type]) return;\n\n  var args = Array.prototype.slice.call(arguments, 1);\n\n  for (var i = 0, l = this.events[type].length; i < l; i++)\n      if(typeof this.events[type][i] === 'function')\n        this.events[type][i].apply(this, args);\n\n}\n\n"],"sourceRoot":"/source/"}